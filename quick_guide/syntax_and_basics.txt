Here's a summary of C++ syntax and basics, along with some examples:

    Comments:
        Comments are used to add explanations or annotations to the code.
        Single-line comments start with //, and multiline comments are enclosed between /* and */.

    cpp

// This is a single-line comment

/*
This is a multiline comment
It can span multiple lines
*/

Variables and Data Types:

    Variables are used to store and manipulate data.
    C++ supports various data types such as integers, floating-point numbers, characters, booleans, and more.

cpp

int age = 25;
double height = 1.75;
char grade = 'A';
bool isPassed = true;

Input and Output:

    std::cout is used to display output to the console.
    std::cin is used to read input from the user.

cpp

#include <iostream>

int main() {
    int number;
    std::cout << "Enter a number: ";
    std::cin >> number;
    std::cout << "You entered: " << number << std::endl;
    return 0;
}

Control Structures:

    if statement is used for conditional execution.
    while and for loops are used for repetitive execution.

cpp

int x = 10;

if (x > 0) {
    std::cout << "Positive number" << std::endl;
}

int i = 1;
while (i <= 5) {
    std::cout << i << " ";
    i++;
}
// Output: 1 2 3 4 5

for (int j = 0; j < 5; j++) {
    std::cout << j << " ";
}
// Output: 0 1 2 3 4

Functions:

    Functions are reusable blocks of code that perform specific tasks.
    They have a return type, a name, and parameters (optional).

cpp

int addNumbers(int a, int b) {
    return a + b;
}

int main() {
    int result = addNumbers(3, 5);
    std::cout << "Sum: " << result << std::endl;
    return 0;
}
// Output: Sum: 8

Arrays:

    Arrays store multiple elements of the same type.
    Elements are accessed using an index starting from 0.

cpp

    int numbers[5] = {1, 2, 3, 4, 5};

    for (int i = 0; i < 5; i++) {
        std::cout << numbers[i] << " ";
    }
    // Output: 1 2 3 4 5